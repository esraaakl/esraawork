{"ast":null,"code":"var _jsxFileName = \"/Users/temporaryadmin/esraawork/esraawork/food-app-react/src/Store/Cart-Provider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultcartstate = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartreducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    let updatedstate = state.items.concat(action.item);\n    let updatedamount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedstate,\n      totalAmount: updatedamount\n    };\n  } else if (action.type === \"REMOVE\") {}\n\n  return defaultcartstate;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartstate, cartstatedispatch] = useReducer(cartreducer, defaultcartstate);\n\n  const addItemToCart = item => {\n    cartstatedispatch({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCart = id => {\n    cartstatedispatch({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartstate.items,\n    totalAmount: cartstate.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"RytGIcYqg975DjXsWvOXFttb8gM=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/temporaryadmin/esraawork/esraawork/food-app-react/src/Store/Cart-Provider.js"],"names":["React","useReducer","CartContext","defaultcartstate","items","totalAmount","cartreducer","state","action","type","updatedstate","concat","item","updatedamount","price","amount","CartProvider","props","cartstate","cartstatedispatch","addItemToCart","removeItemFromCart","id","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAC;AACnBC,EAAAA,KAAK,EAAC,EADa;AAEnBC,EAAAA,WAAW,EAAC;AAFO,CAAvB;;AAKA,MAAMC,WAAW,GAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAC9B,MAAGA,MAAM,CAACC,IAAP,KAAc,KAAjB,EACA;AACI,QAAIC,YAAY,GAACH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAAjB;AACA,QAAIC,aAAa,GAACN,KAAK,CAACF,WAAN,GAAmBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAkBN,MAAM,CAACI,IAAP,CAAYG,MAAnE;AAEA,WAAM;AACFX,MAAAA,KAAK,EAACM,YADJ;AAEFL,MAAAA,WAAW,EAACQ;AAFV,KAAN;AAKH,GAVD,MAUM,IAAIL,MAAM,CAACC,IAAP,KAAc,QAAlB,EAA2B,CAEhC;;AAEL,SAAON,gBAAP;AACC,CAhBD;;AAkBA,MAAMa,YAAY,GAAEC,KAAK,IAAE;AAAA;;AAE3B,QAAK,CAACC,SAAD,EAAWC,iBAAX,IAA8BlB,UAAU,CAACK,WAAD,EAAaH,gBAAb,CAA7C;;AAEA,QAAMiB,aAAa,GAAER,IAAD,IAAQ;AAC5BO,IAAAA,iBAAiB,CAAC;AACdV,MAAAA,IAAI,EAAC,KADS;AAEdG,MAAAA,IAAI,EAACA;AAFS,KAAD,CAAjB;AAMC,GAPD;;AASI,QAAMS,kBAAkB,GAAEC,EAAD,IAAM;AAC3BH,IAAAA,iBAAiB,CAAC;AACdV,MAAAA,IAAI,EAAC,QADS;AAEda,MAAAA,EAAE,EAACA;AAFW,KAAD,CAAjB;AAKH,GAND;;AAQA,QAAMC,WAAW,GAAC;AACdnB,IAAAA,KAAK,EAACc,SAAS,CAACd,KADF;AAEdC,IAAAA,WAAW,EAACa,SAAS,CAACb,WAFR;AAGdmB,IAAAA,OAAO,EAACJ,aAHM;AAIdK,IAAAA,UAAU,EAACJ;AAJG,GAAlB;AAOJ,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACKN,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKC,CAjCD;;GAAMV,Y;;KAAAA,Y;AAmCN,eAAeA,YAAf","sourcesContent":["import React,{useReducer} from \"react\";\nimport CartContext from \"./cart-context\";\n\nconst defaultcartstate={\n    items:[],\n    totalAmount:0\n}\n\nconst cartreducer=(state,action)=>{\n    if(action.type===\"ADD\")\n    {\n        let updatedstate=state.items.concat(action.item)\n        let updatedamount=state.totalAmount+(action.item.price*action.item.amount)\n\n        return{\n            items:updatedstate,\n            totalAmount:updatedamount\n        }\n\n    }else if (action.type===\"REMOVE\"){\n\n    }\n\nreturn defaultcartstate\n}\n\nconst CartProvider =props=>{\n\nconst[cartstate,cartstatedispatch]=useReducer(cartreducer,defaultcartstate) \n\nconst addItemToCart=(item)=>{\ncartstatedispatch({\n    type:\"ADD\",\n    item:item\n})\n\n\n}\n\n    const removeItemFromCart=(id)=>{\n        cartstatedispatch({\n            type:\"REMOVE\",\n            id:id\n        })\n\n    }\n\n    const cartContext={\n        items:cartstate.items,\n        totalAmount:cartstate.totalAmount,\n        addItem:addItemToCart,\n        removeItem:removeItemFromCart\n    \n    }\nreturn (\n    <CartContext.Provider value={cartContext}>\n        {props.children}\n    </CartContext.Provider>\n)\n}\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}