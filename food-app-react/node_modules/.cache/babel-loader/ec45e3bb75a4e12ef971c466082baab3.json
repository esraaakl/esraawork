{"ast":null,"code":"var _jsxFileName = \"/Users/temporaryadmin/esraawork/esraawork/food-app-react/src/Store/Cart-Provider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultcartstate = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartreducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    let updatedamount = state.totalAmount + action.item.price * action.item.amount;\n    const existingItemInCardindex = state.items.findIndex(item => {\n      return item.id === action.item.id;\n    });\n    let existingItemInCard;\n    let updateditem;\n    let updatedotems;\n\n    if (existingItemInCardindex !== -1) {\n      existingItemInCard = state.items[existingItemInCardindex];\n      updateditem = { ...existingItemInCard,\n        amount: existingItemInCard.amount + action.item.amount\n      };\n      updatedotems = [...state.items];\n      updatedotems[existingItemInCardindex] = updateditem;\n      return {\n        items: updatedotems,\n        totalAmount: updatedamount\n      };\n    }\n\n    return {\n      items: state.items.concat(action.item),\n      totalAmount: updatedamount\n    };\n  } else if (action.type === \"REMOVE\") {}\n\n  return defaultcartstate;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartstate, cartstatedispatch] = useReducer(cartreducer, defaultcartstate);\n\n  const addItemToCart = item => {\n    cartstatedispatch({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCart = id => {\n    cartstatedispatch({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartstate.items,\n    totalAmount: cartstate.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"RytGIcYqg975DjXsWvOXFttb8gM=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/temporaryadmin/esraawork/esraawork/food-app-react/src/Store/Cart-Provider.js"],"names":["React","useReducer","CartContext","defaultcartstate","items","totalAmount","cartreducer","state","action","type","updatedamount","item","price","amount","existingItemInCardindex","findIndex","id","existingItemInCard","updateditem","updatedotems","concat","CartProvider","props","cartstate","cartstatedispatch","addItemToCart","removeItemFromCart","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,UAAd,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAC;AACnBC,EAAAA,KAAK,EAAC,EADa;AAEnBC,EAAAA,WAAW,EAAC;AAFO,CAAvB;;AAKA,MAAMC,WAAW,GAAC,CAACC,KAAD,EAAOC,MAAP,KAAgB;AAC9B,MAAGA,MAAM,CAACC,IAAP,KAAc,KAAjB,EACA;AACI,QAAIC,aAAa,GAACH,KAAK,CAACF,WAAN,GAAmBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAkBJ,MAAM,CAACG,IAAP,CAAYE,MAAnE;AAEA,UAAMC,uBAAuB,GAACP,KAAK,CAACH,KAAN,CAAYW,SAAZ,CAAuBJ,IAAI,IAAE;AACtD,aAAOA,IAAI,CAACK,EAAL,KAAUR,MAAM,CAACG,IAAP,CAAYK,EAA7B;AACJ,KAF6B,CAA9B;AAIA,QAAKC,kBAAL;AACA,QAAIC,WAAJ;AACA,QAAIC,YAAJ;;AACA,QAAGL,uBAAuB,KAAI,CAAC,CAA/B,EACA;AACIG,MAAAA,kBAAkB,GAACV,KAAK,CAACH,KAAN,CAAYU,uBAAZ,CAAnB;AACAI,MAAAA,WAAW,GAAC,EAAC,GAAGD,kBAAJ;AAAuBJ,QAAAA,MAAM,EAAEI,kBAAkB,CAACJ,MAAnB,GAA0BL,MAAM,CAACG,IAAP,CAAYE;AAArE,OAAZ;AACAM,MAAAA,YAAY,GAAC,CAAC,GAAGZ,KAAK,CAACH,KAAV,CAAb;AACAe,MAAAA,YAAY,CAACL,uBAAD,CAAZ,GAAsCI,WAAtC;AACA,aAAM;AACFd,QAAAA,KAAK,EAACe,YADJ;AAEFd,QAAAA,WAAW,EAACK;AAFV,OAAN;AAIH;;AACD,WAAM;AACFN,MAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,CAAYgB,MAAZ,CAAmBZ,MAAM,CAACG,IAA1B,CADL;AAEFN,MAAAA,WAAW,EAACK;AAFV,KAAN;AAOH,GA7BD,MA6BM,IAAIF,MAAM,CAACC,IAAP,KAAc,QAAlB,EAA2B,CAEhC;;AAEL,SAAON,gBAAP;AACC,CAnCD;;AAqCA,MAAMkB,YAAY,GAAEC,KAAK,IAAE;AAAA;;AAE3B,QAAK,CAACC,SAAD,EAAWC,iBAAX,IAA8BvB,UAAU,CAACK,WAAD,EAAaH,gBAAb,CAA7C;;AAEA,QAAMsB,aAAa,GAAEd,IAAD,IAAQ;AAC5Ba,IAAAA,iBAAiB,CAAC;AACdf,MAAAA,IAAI,EAAC,KADS;AAEdE,MAAAA,IAAI,EAACA;AAFS,KAAD,CAAjB;AAMC,GAPD;;AAQA,QAAMe,kBAAkB,GAAEV,EAAD,IAAM;AACvBQ,IAAAA,iBAAiB,CAAC;AACdf,MAAAA,IAAI,EAAC,QADS;AAEdO,MAAAA,EAAE,EAACA;AAFW,KAAD,CAAjB;AAKH,GANL;;AAQI,QAAMW,WAAW,GAAC;AACdvB,IAAAA,KAAK,EAACmB,SAAS,CAACnB,KADF;AAEdC,IAAAA,WAAW,EAACkB,SAAS,CAAClB,WAFR;AAGduB,IAAAA,OAAO,EAACH,aAHM;AAIdI,IAAAA,UAAU,EAACH;AAJG,GAAlB;AAOJ,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACKL,KAAK,CAACQ;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKC,CAhCD;;GAAMT,Y;;KAAAA,Y;AAkCN,eAAeA,YAAf","sourcesContent":["import React,{useReducer} from \"react\";\nimport CartContext from \"./cart-context\";\n\nconst defaultcartstate={\n    items:[],\n    totalAmount:0\n}\n\nconst cartreducer=(state,action)=>{\n    if(action.type===\"ADD\")\n    {\n        let updatedamount=state.totalAmount+(action.item.price*action.item.amount)\n\n        const existingItemInCardindex=state.items.findIndex( item=>{\n             return item.id===action.item.id\n        })\n\n        let  existingItemInCard;\n        let updateditem;\n        let updatedotems;\n        if(existingItemInCardindex!== -1)\n        {\n            existingItemInCard=state.items[existingItemInCardindex]\n            updateditem={...existingItemInCard,amount: existingItemInCard.amount+action.item.amount}\n            updatedotems=[...state.items];\n            updatedotems[existingItemInCardindex]=updateditem\n            return{\n                items:updatedotems,\n                totalAmount:updatedamount\n            }\n        }\n        return{\n            items: state.items.concat(action.item) ,\n            totalAmount:updatedamount\n        }\n       \n\n        \n    }else if (action.type===\"REMOVE\"){\n\n    }\n\nreturn defaultcartstate\n}\n\nconst CartProvider =props=>{\n\nconst[cartstate,cartstatedispatch]=useReducer(cartreducer,defaultcartstate) \n\nconst addItemToCart=(item)=>{\ncartstatedispatch({\n    type:\"ADD\",\n    item:item\n})\n\n\n}\nconst removeItemFromCart=(id)=>{\n        cartstatedispatch({\n            type:\"REMOVE\",\n            id:id\n        })\n\n    }\n\n    const cartContext={\n        items:cartstate.items,\n        totalAmount:cartstate.totalAmount,\n        addItem:addItemToCart,\n        removeItem:removeItemFromCart\n    \n    }\nreturn (\n    <CartContext.Provider value={cartContext}>\n        {props.children}\n    </CartContext.Provider>\n)\n}\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}