{"ast":null,"code":"var _jsxFileName = \"/Users/temporaryadmin/esraawork/esraawork/hooks-project/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst meialReducer = (state, action) => {\n  if (action.type === \"email input\") {\n    return {\n      value: action.val,\n      isvalid: action.val.includes(\"@\")\n    };\n  }\n\n  if (action.type === \"validating email\") {\n    return {\n      value: state.value,\n      isvalid: state.value.includes(\"@\")\n    };\n  }\n\n  return {\n    value: \"\",\n    isvalid: false\n  };\n};\n\nconst passReducer = (state, action) => {\n  if (action.type === \"pass input\") return {\n    value: action.val,\n    isvalid: action.val.length > 6\n  };\n  if (action.type == \"validating pass\") return {\n    value: state.value,\n    isvalid: state.value.length > 6\n  };\n  return {\n    value: \"\",\n    isvalid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailstate, dispatcgEmail] = useReducer(meialReducer, {\n    value: \"\",\n    isvalid: \"\"\n  });\n  const [passstate, dispachpass] = useReducer(passReducer, {\n    value: \"\",\n    isvalid: \"\"\n  });\n  console.log(passstate); // useEffect(()=>{\n  //   console.log(\"from effect\")\n  // })\n\n  const {\n    isvalid: emailvalied\n  } = emailstate;\n  const {\n    isvalid: passvalied\n  } = passstate;\n  useEffect(() => {\n    let handler = setTimeout(() => {\n      setFormIsValid(emailvalied && passvalied);\n      console.log(\"efftect hook\");\n    }, 1000);\n    return () => {\n      console.log(\"cleanup\");\n      clearTimeout(handler);\n    };\n  }, [emailvalied, passvalied]);\n\n  const emailChangeHandler = event => {\n    dispatcgEmail({\n      type: \"email input\",\n      val: event.target.value\n    }); // setFormIsValid(\n    //   event.target.value.includes('@') && passstate.value.trim().length > 6\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    dispachpass({\n      type: \"pass input\",\n      val: event.target.value\n    }); // setFormIsValid(\n    //   emailstate.isvalid&& event.target.value.trim().length > 6\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatcgEmail({\n      type: \"validating email\"\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispachpass({\n      type: \"validating pass\"\n    }); // setPasswordIsValid(passstate.value.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailstate.value, passstate.value);\n  };\n\n  console.log(\"rendering\");\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailstate.isvalid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailstate.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passstate.isvalid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passstate.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"/ubMYyNi25YoD9adiIdiNxPcVDk=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/temporaryadmin/esraawork/esraawork/hooks-project/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","meialReducer","state","action","type","value","val","isvalid","includes","passReducer","length","Login","props","formIsValid","setFormIsValid","emailstate","dispatcgEmail","passstate","dispachpass","console","log","emailvalied","passvalied","handler","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState ,useEffect,useReducer} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst meialReducer=(state,action)=>{\n  if(action.type===\"email input\"){\n    return {value:action.val,\n            isvalid:action.val.includes(\"@\")}\n  }\n  if (action.type===\"validating email\")\n  {\n    return  {\n      value:state.value,\n      isvalid:state.value.includes(\"@\")\n    }\n  \n  }\n  return {\n    value:\"\",\n    isvalid:false\n  }\n\n}\n\nconst passReducer=(state,action)=>{\n  if(action.type===\"pass input\")\n  return {\n    value:action.val,\n    isvalid:action.val.length>6\n  }\n  if(action.type==\"validating pass\")\n  return{\n    value:state.value,\n    isvalid:state.value.length>6\n  }\n\n  return{\n    value:\"\",\n    isvalid:false\n  }\n}\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState('');\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailstate,dispatcgEmail]=useReducer(meialReducer,{\n    value:\"\",\n    isvalid:\"\"\n  })\n\n  const [passstate,dispachpass]=useReducer(passReducer,{\n    value:\"\",\n    isvalid:\"\"\n  })\n  console.log(passstate)\n\n  // useEffect(()=>{\n  //   console.log(\"from effect\")\n  // })\n\nconst {isvalid :emailvalied}=emailstate\nconst {isvalid:passvalied }= passstate\n  useEffect(()=>{\n    \n    let handler= setTimeout(()=>{\n   setFormIsValid(\n    emailvalied && passvalied\n      );\n      console.log(\"efftect hook\")\n    },1000)\n    return ()=>{\n      console.log(\"cleanup\")\n      clearTimeout(handler)\n    } \n\n  },[emailvalied,passvalied])\n\n  const emailChangeHandler = (event) => {\n    dispatcgEmail({type:\"email input\",val:event.target.value});\n    // setFormIsValid(\n    //   event.target.value.includes('@') && passstate.value.trim().length > 6\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispachpass({type:\"pass input\", val:event.target.value})\n    // setFormIsValid(\n    //   emailstate.isvalid&& event.target.value.trim().length > 6\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    dispatcgEmail({\n      type:\"validating email\"\n    })\n  };\n\n  const validatePasswordHandler = () => {\n    dispachpass({\n      type:\"validating pass\"\n    })\n    // setPasswordIsValid(passstate.value.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailstate.value, passstate.value);\n  };\nconsole.log(\"rendering\")\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailstate.isvalid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailstate.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passstate.isvalid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passstate.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n}\n\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}